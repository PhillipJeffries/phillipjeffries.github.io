{"version":3,"sources":["utils/storeApi.js","components/List/Title.js","components/Card.js","components/Input/inputCard.js","components/Input/InputCotainer.js","components/List/List.js","utils/store.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","margin","spacing","display","editableTitle","marginLeft","flexGrow","fontSize","fontWeight","input","background","Title","title","listId","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","InputBase","onChange","e","target","value","onBlur","autoFocus","inputProps","className","fullWidth","Typography","onClick","card","padding","Card","Paper","paddingBottom","confirm","btnConfirm","color","fade","InputCard","type","addMoreCard","addMoreList","setTitle","multiline","placeholder","Button","IconButton","root","width","marginTop","addCard","backgroundColor","InputContainer","Collapse","in","elevation","maxWidth","minWidth","List","list","CssBaseline","id","cards","map","data","lists","listIds","flexWrap","minHeight","App","store","setData","Provider","newCard","uuid","newState","newListId","newList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a7f0e8.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import React, { useContext, useState } from 'react';\nimport { InputBase, Typography } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n    editableTitleContainer: {\n        margin: theme.spacing(1),\n        display: 'flex',\n    },\n    editableTitle: {\n        marginLeft: theme.spacing(1),\n        flexGrow: 1,\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n\n    },\n    input: {\n        margin: theme.spacing(1),\n        \n        \"&:focus\":{\n            background: \"#ddd\",\n        }\n    }\n}));\n\nexport default function Title({title, listId}) {\n    const [open, setOpen] = useState(false);\n    const [newTitle, setNewTitle] = useState(title);\n    const { updateListTitle } = useContext(storeApi);\n    const classes = useStyle();\n    const handleOnChange = (e) =>{\n        setNewTitle(e.target.value);\n    };\n    const handleOnBlur = ()=>{\n        updateListTitle(newTitle, listId)\n        setOpen(false);\n    };\n    return (\n        <div>\n            {open? (\n                <div>\n                    <InputBase \n                        onChange={handleOnChange}\n                        onBlur={handleOnBlur}\n                        autoFocus\n                        value={newTitle} \n                        inputProps={{\n                            className: classes.input,\n                        }}\n                        fullWidth\n                        //onBlur = {()=> setOpen(!open)}\n                    />\n                </div>\n            ) : (\n                <div className={classes.editableTitleContainer}>\n                    <Typography \n                        onClick={()=>setOpen(!open)}\n                        className={classes.editableTitle}>\n                            {title}\n                    </Typography>\n                    <MoreHorizIcon />\n                </div>\n            )}\n        </div>\n    )\n}\n\n    ","import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyle = makeStyles((theme) => ({\n    card: {\n        padding: theme.spacing(1,1,1,2),\n        margin: theme.spacing(1),\n    },\n}));\nexport default function Card({card}) {\n    const classes = useStyle();\n    return (\n        <div>\n            <Paper className={classes.card}>\n                {card.title}\n            </Paper>\n        </div>\n    );\n}\n","import React, {useContext, useState} from 'react';\nimport { Paper, InputBase, Button, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n    card:{\n        margin: theme.spacing(0,1,1,1),\n        paddingBottom: theme.spacing(4),\n    },\n    input: {\n        margin: theme.spacing(1),\n    },\n    confirm: {\n        margin: theme.spacing(1),\n    },\n    btnConfirm: {\n        background: 'green',\n        color: '#fff',\n        \"$:hover\": {\n            background: fade(\"#5AAC44\", 0.75),\n        }\n    }\n}));\n\nexport default function InputCard({setOpen, listId, type}) {\n    const classes = useStyle();\n    const {addMoreCard, addMoreList} = useContext(storeApi);\n    const [title, setTitle] = useState('');\n    \n    const handleOnChange = (e) => {\n        setTitle(e.target.value);\n    };\n    const handleBtnConfirm = () => {\n        if(type === 'card'){\n            addMoreCard(title, listId);\n            setTitle('');\n            setOpen(false);\n        } else {\n            addMoreList(title, listId);\n            setTitle('');\n            setOpen(false);\n        }\n\n    };\n\n    const handleBlur = () => {\n        setOpen(false);\n        //setTitle(''); //?\n    }\n\n   \n\n    return (\n        <div>\n            <div >\n                <Paper className={classes.card}>\n                    <InputBase \n                        multiline\n                        onBlur={()=> setOpen(false)}\n                        onChange={handleOnChange}\n                        fullWidth\n                        inputProps={{\n                            className: classes.input,\n                        }}\n                        value={title}\n                        placeholder={type==='card'?\"Enter a title for this card...\":\"Enter list title...\"}\n                    />\n                </Paper>\n            </div>\n            <div className={classes.confirm}>\n                <Button className={classes.btnConfirm}\n                        onClick={handleBtnConfirm}>{type==='card'?\"Add Card\":\"Add List\"}</Button>\n                <IconButton onClick={()=> setOpen(false)}>\n                    <ClearIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { Paper, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport InputCard from './inputCard'\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        width:'300px',\n        marginTop: theme.spacing(1),\n    },\n    addCard: {\n        padding: theme.spacing(1,1,1,2),\n        margin: theme.spacing(0,1,1,1),\n        background: '#EBECF0',\n        \"&:hover\":{\n            backgroundColor: fade(\"#000\", 0.25),\n        }\n    }\n}));\n\nexport default function InputContainer({listId, type}) {\n    const classes = useStyle();\n    const [open, setOpen] = useState(false);\n    return (\n        <div className={classes.root}>\n            <Collapse in={open}>\n                <InputCard \n                    setOpen={setOpen}\n                    listId={listId}\n                    type={type}/>\n            </Collapse>\n            <Collapse in={!open}>\n            <Paper className={classes.addCard}\n                    elevation={0}\n                    onClick={()=> setOpen(!open)}\n                >\n                <Typography>{type==='card'?\"+ Add Card\":\"+ Add another List\"}</Typography>\n            </Paper>\n            </Collapse>\n            \n            \n        </div>\n    )\n}","import React from 'react';\nimport {Paper, Typography, CssBaseline} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Title from './Title';\nimport Card from '../Card';\nimport InputContainer from '../Input/InputCotainer'\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        maxWidth: '300px',\n        minWidth: '0',\n        backgroundColor: '#EBECF0',\n        marginLeft: theme.spacing(1),\n    },\n}));\n\n\nexport default function List( {list} ) {\n    const classes = useStyle();\n    return (\n        <div>\n            <Paper className={classes.root}>\n                <CssBaseline />\n                <Title title={list.title} listId={list.id}/>\n                { list.cards.map((card) => (\n                    <Card key={card.id} card={card} />\n                )) }\n                <InputContainer listId={list.id} type=\"card\"/>\n            </Paper>\n        </div>\n    )\n}","const cards = [\n    { \n        id: 'card-1',\n        title: 'Hallo'\n    },\n];\n\nconst data = {\n    lists: {\n        'list-1': {\n            id: 'list-1',\n            title: 'Tootoo',\n            cards,\n        },\n    },\n    listIds: ['list-1']\n};\n\nexport default data;","import React, { useState } from 'react';\nimport {v4 as uuid} from \"uuid\";\nimport List from './components/List/List';\nimport './App.css';\nimport store from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputContainer from './components/Input/InputCotainer';\n\nconst useStyle = makeStyles((theme) => ({\n  root:{\n    display:'flex',\n    flexWrap: 'wrap',\n    minHeight:'100vh',\n    background: 'green',\n  },\n}));\n\n\nfunction App() {\n  const [data, setData] = useState(store);\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards,newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n \n  const addMoreList = (title) =>{\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds:[...data.listIds,newListId],\n      lists:{\n        ...data.lists,\n        [newListId]:newList,\n      },\n    };\n    \n  \n\n    setData(newState);\n\n  };\n\n  const updateListTitle = (title, listId) =>{\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists:{\n        ...data.lists,\n        [listId]:list\n      }\n    }\n    setData(newState);\n  };\n\n\n  return (\n    <StoreApi.Provider value={{addMoreCard, addMoreList, updateListTitle}}>\n      <div className={classes.root}>\n        {data.listIds.map((listId) => {\n          const list = data.lists[listId];\n          return <List list={list} key={listId} />\n\n        })}\n        <InputContainer type=\"list\"/>\n      </div>\n    </StoreApi.Provider>\n  );\n}\n\n\nexport default App;\n    \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}